set backspace=2         " backspace in insert mode works like normal editor
set colorcolumn=80,120  " highlight column at 80 and 120 chars
set hidden              " send unsaved buffers to the background without error
set mouse=              " disable mouse
set nobackup            " get rid of anoying ~file
set nocompatible        " disable old-vi compatibility mode
set nohlsearch          " disable search highlighting
set number              " line numbers
set showmatch           " highlight matching bracket

call plug#begin('~/.vim/plugged')

Plug 'HerringtonDarkholme/yats.vim'
Plug 'Shougo/denite.nvim'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'Shougo/vimproc.vim', {'do' : 'make'}
Plug 'altercation/vim-colors-solarized'
Plug 'bag-man/copypath.vim'
Plug 'cakebaker/scss-syntax.vim'
Plug 'dense-analysis/ale'
Plug 'ervandew/supertab'
Plug 'jreybert/vimagit'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'mhartington/nvim-typescript', { 'do': './install.sh' }
Plug 'mhinz/vim-startify'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/nerdtree'
Plug 'tell-k/vim-autopep8'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-scripts/pep8'

call plug#end()

" Global settings for all files (but may be overridden in ftplugin).
setlocal tabstop=4
setlocal softtabstop=4
setlocal shiftwidth=4
setlocal smarttab
setlocal expandtab

" Syntax highlighting
syntax on                    " syntax highlighing
filetype on                  " try to detect filetypes
filetype plugin indent on    " enable loading indent file for filetype

" Search
set ignorecase
set smartcase

" Solarized
let g:solarized_termtrans = 1
set background=dark
silent! colorscheme solarized  " ignore warnings if solarized is not yet installed

" NerdTree
map <F2> :NERDTreeToggle<CR>
map <leader>f :NERDTreeFind<CR>

" Code Folding
set foldmethod=indent
set foldlevel=99

" Window Movement
"   Vertical Split : Ctrl+w + v
"   Horizontal Split: Ctrl+w + s
"   Close current windows: Ctrl+w + q
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Escape key
inoremap jk <Esc>`^
inoremap <Esc> <nop>

" Quickfix window reference
" :copen " Open the quickfix window
" :ccl   " Close it
" :cw    " Open it if there are 'errors', close it otherwise (some people prefer this)
" :cn    " Go to the next error in the window
" :cnf   " Go to the first error in the next file

" let g:SuperTabCrMapping = 0
autocmd FileType *
      \ if &omnifunc != '' |
      \     call SuperTabChain(&omnifunc, '<c-p>') |
      \ endif
set completeopt=menuone,longest
let g:SuperTabDefaultCompletionType = "<c-n>"
" let g:SuperTabDefaultCompletionType = 'context'
" set completeopt-=preview

" fzf
map <leader>t :Files<CR>
map ; :Buffers<CR>
nmap <tab> :b#<CR>    " switch to the previous buffer using TAB
imap <c-x><c-f> <plug>(fzf-complete-file-ag)
map , :Lines<CR>

" startify
let g:startify_change_to_dir = 0
let g:startify_list_order = ['dir']

" Toggle line numbers
map <leader>n :set nu!<CR>

" Unfuck my screen
nnoremap U :syntax sync fromstart<CR>:redraw!<CR>

" deoplete.nvim
let g:deoplete#enable_at_startup = 1

" Git shortcuts
nnoremap <space>gst :Magit<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>gb :Gblame<CR>
nnoremap <space>glg :Git log --stat %:p <CR>

" Neovim-specific configuration
if has('nvim')
  tnoremap <Esc> <C-\><C-n>    " use Esc to enter normal mode in terminal
  let g:python_host_prog=$WORKON_HOME."/nvim/bin/python"
  let g:python3_host_prog=$WORKON_HOME."/nvim-python3/bin/python"
endif

" Copypath
map <leader>cp :CopyPath<CR>
map <leader>cf :CopyFileName<CR>

" Common indent settings
map <leader>2 :setlocal expandtab shiftwidth=2 tabstop=2<CR>
map <leader>4 :setlocal expandtab shiftwidth=4 tabstop=4<CR>

" Indentation overrides
autocmd FileType css setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType scss setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType html setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType typescript setlocal expandtab shiftwidth=4 tabstop=4
autocmd FileType scheme setlocal expandtab shiftwidth=2 tabstop=2

" Ale
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'python': ['flake8', 'pylint'],
\   'typescript': ['tslint', 'tsserver'],
\}

let g:ale_linters_explicit = 1
let g:ale_javascript_eslint_use_global = 1
let g:ale_javascript_eslint_options = '--resolve-plugins-relative-to=`npm root -g` --parser-options=ecmaVersion:2018'

if filereadable($TSSERVER_BIN)
  call ale#Set('typescript_tsserver_executable', $TSSERVER_BIN)
endif

" ------ JS/Typescript ------

let g:nvim_typescript#default_mappings = 0
autocmd FileType typescript,typescriptreact nnoremap <buffer> <c-]> :TSDef<CR>
autocmd FileType typescript,typescriptreact nnoremap <buffer> <c-^> :TSRefs<CR>
autocmd FileType typescript,typescriptreact nnoremap <buffer> <c-t> :TSType<CR>

" ------ Python ------

" Omnifunc completion
" autocmd FileType python set omnifunc=pythoncomplete#Complete

" vim-abolish reference - case mutations.
"   crc: camelCase
"   crs: snake_case
"   cru: SNAKE_UPPERCASE
