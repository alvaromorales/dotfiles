set backspace=2         " backspace in insert mode works like normal editor
set colorcolumn=80      " highlight column at 80 chars
set hidden              " send unsaved buffers to the background without error
set nobackup            " get rid of anoying ~file
set nocompatible        " disable old-vi compatibility mode
set nohlsearch          " disable search highlighting
set number              " line numbers
set showmatch           " highlight matching bracket

set rtp+=~/.vim/bundle/vundle/

call vundle#rc()

Plugin 'gmarik/vundle'

" Plugins from Github
Plugin 'altercation/vim-colors-solarized.git'
Plugin 'ervandew/supertab'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'kien/ctrlp.vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'pangloss/vim-javascript'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'tell-k/vim-autopep8'
Plugin 'tpope/vim-git'
Plugin 'tpope/vim-surround'
Plugin 'vim-scripts/matchit.zip'
Plugin 'vim-scripts/pep8'

" Syntax highlighting
syntax on                    " syntax highlighing
filetype on                  " try to detect filetypes
filetype plugin indent on    " enable loading indent file for filetype

" Solarized
let g:solarized_termtrans = 1
set background=dark
colorscheme solarized

" NerdTree
map <F2> :NERDTreeToggle<CR>

" Code Folding
set foldmethod=indent
set foldlevel=99

" Window Movement
"   Vertical Split : Ctrl+w + v
"   Horizontal Split: Ctrl+w + s
"   Close current windows: Ctrl+w + q
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Quickfix window reference
" :copen " Open the quickfix window
" :ccl   " Close it
" :cw    " Open it if there are 'errors', close it otherwise (some people prefer this)
" :cn    " Go to the next error in the window
" :cnf   " Go to the first error in the next file

" Syntastic
let g:pyflakes_use_quickfix = 0      " no quickfix window for pyflakes
let g:syntastic_check_on_open = 1    " check for errors on buffer open
let g:syntastic_check_on_wq = 0      " don't check on :wq

" Pep8
let g:pep8_map='<F7>'

" Autopep8
let g:autopep8_ignore="E501"
let g:autopep8_disable_show_diff=1

" Tab Completion and Doc
au FileType python set omnifunc=pythoncomplete#Complete
let g:SuperTabDefaultCompletionType = "context"
set completeopt=menuone,longest
" set completeopt-=preview

" CtrlP
map <leader>t :CtrlP<CR>
map <leader>b :CtrlPBuffer<CR>

" Neovim-specific configuration
if has('nvim')
  tnoremap <Esc> <C-\><C-n>    " use Esc to enter normal mode in terminal
  nmap <BS> <C-W>h             " temp workaround, see neovim issue #2048
endif
