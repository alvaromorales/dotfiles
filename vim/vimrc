set backspace=2         " backspace in insert mode works like normal editor
set colorcolumn=80,120  " highlight column at 80 and 120 chars
set hidden              " send unsaved buffers to the background without error
set mouse=              " disable mouse
set nobackup            " get rid of anoying ~file
set nocompatible        " disable old-vi compatibility mode
set nohlsearch          " disable search highlighting
set number              " line numbers
set showmatch           " highlight matching bracket

call plug#begin('~/.vim/plugged')

Plug 'Quramy/tsuquyomi'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'Shougo/vimproc.vim', {'do' : 'make'}
Plug 'altercation/vim-colors-solarized'
Plug 'alvaromorales/pyflakes-vim'
Plug 'bag-man/copypath.vim'
Plug 'cakebaker/scss-syntax.vim'
Plug 'dkprice/vim-easygrep'
Plug 'ervandew/supertab'
Plug 'jreybert/vimagit'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'leafgarland/typescript-vim'
Plug 'mhinz/vim-startify'
Plug 'mileszs/ack.vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'pangloss/vim-javascript'
Plug 'rbgrouleff/bclose.vim'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tell-k/vim-autopep8'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-scripts/pep8'

call plug#end()

" Global settings for all files (but may be overridden in ftplugin).
setlocal tabstop=4
setlocal softtabstop=4
setlocal shiftwidth=4
setlocal smarttab
setlocal expandtab

" Syntax highlighting
syntax on                    " syntax highlighing
filetype on                  " try to detect filetypes
filetype plugin indent on    " enable loading indent file for filetype

" Search
set ignorecase
set smartcase

" Solarized
let g:solarized_termtrans = 1
set background=dark
silent! colorscheme solarized  " ignore warnings if solarized is not yet installed

" NerdTree
map <F2> :NERDTreeToggle<CR>
map <leader>f :NERDTreeFind<CR>

" Code Folding
set foldmethod=indent
set foldlevel=99

" Window Movement
"   Vertical Split : Ctrl+w + v
"   Horizontal Split: Ctrl+w + s
"   Close current windows: Ctrl+w + q
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Quickfix window reference
" :copen " Open the quickfix window
" :ccl   " Close it
" :cw    " Open it if there are 'errors', close it otherwise (some people prefer this)
" :cn    " Go to the next error in the window
" :cnf   " Go to the first error in the next file

" Pyflakes
let g:pyflakes_use_quickfix = 0      " no quickfix window for pyflakes

" Pep8
let g:pep8_map='<F7>'

" Autopep8
let g:autopep8_ignore="E501"
let g:autopep8_disable_show_diff=1

" tsuquyomi
let g:tsuquyomi_disable_quickfix = 1

" Tab Completion and Doc
au FileType python set omnifunc=pythoncomplete#Complete
let g:SuperTabDefaultCompletionType = "context"
set completeopt=menuone,longest
" set completeopt-=preview

" fzf
map <leader>t :Files<CR>
map ; :Buffers<CR>
nmap <tab> :b#<CR>    " switch to the previous buffer using TAB

" startify
let g:startify_change_to_dir = 0
let g:startify_list_order = ['dir']

" Toggle line numbers
map <leader>n :set nu!<CR>

" Unfuck my screen
nnoremap U :syntax sync fromstart<CR>:redraw!<CR>

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_mode_map = { 'passive_filetypes': ['python'] }
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_typescript_checkers = ['tsuquyomi']

" deoplete.nvim
let g:deoplete#enable_at_startup = 1

" Git shortcuts
nnoremap <space>gst :Magit<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>gb :Gblame<CR>

" Neovim-specific configuration
if has('nvim')
  tnoremap <Esc> <C-\><C-n>    " use Esc to enter normal mode in terminal
  let g:python_host_prog=$WORKON_HOME."/nvim/bin/python"
endif

" Copypath
map <leader>cp :CopyPath<CR>
map <leader>cf :CopyFileName<CR>

" BClose
nnoremap <silent> <Leader>bd :Bclose<CR>

" Common indent settings
map <leader>2 :setlocal expandtab shiftwidth=2 tabstop=2<CR>
map <leader>4 :setlocal expandtab shiftwidth=4 tabstop=4<CR>

" Indentation overrides
autocmd FileType css setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType scss setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType html setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2
autocmd FileType typescript setlocal expandtab shiftwidth=4 tabstop=4
autocmd FileType scheme setlocal expandtab shiftwidth=2 tabstop=2
